"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from isolate.connections.grpc.definitions import common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TaskStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TaskStatusEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskStatus.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    QUEUED: _TaskStatus.ValueType  # 0
    RUNNING: _TaskStatus.ValueType  # 1
    COMPLETED: _TaskStatus.ValueType  # 2

class TaskStatus(_TaskStatus, metaclass=_TaskStatusEnumTypeWrapper): ...

QUEUED: TaskStatus.ValueType  # 0
RUNNING: TaskStatus.ValueType  # 1
COMPLETED: TaskStatus.ValueType  # 2
global___TaskStatus = TaskStatus

@typing_extensions.final
class CreateTaskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FUNCTION_FIELD_NUMBER: builtins.int
    @property
    def function(self) -> common_pb2.SerializedObject:
        """The function to run."""
    def __init__(
        self,
        *,
        function: common_pb2.SerializedObject | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["function", b"function"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["function", b"function"]
    ) -> None: ...

global___CreateTaskRequest = CreateTaskRequest

@typing_extensions.final
class CreateTaskResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    task_id: builtins.str
    """The task that was created."""
    def __init__(
        self,
        *,
        task_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["task_id", b"task_id"]
    ) -> None: ...

global___CreateTaskResponse = CreateTaskResponse

@typing_extensions.final
class CheckTaskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    task_id: builtins.str
    """The task to check."""
    def __init__(
        self,
        *,
        task_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["task_id", b"task_id"]
    ) -> None: ...

global___CheckTaskRequest = CheckTaskRequest

@typing_extensions.final
class CheckTaskResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    status: global___TaskStatus.ValueType
    """The status of the task."""
    @property
    def result(self) -> common_pb2.SerializedObject:
        """The result of the task, if it is completed."""
    def __init__(
        self,
        *,
        status: global___TaskStatus.ValueType = ...,
        result: common_pb2.SerializedObject | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_result", b"_result", "result", b"result"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_result", b"_result", "result", b"result", "status", b"status"
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_result", b"_result"]
    ) -> typing_extensions.Literal["result"] | None: ...

global___CheckTaskResponse = CheckTaskResponse

@typing_extensions.final
class CancelTaskRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    task_id: builtins.str
    """The task to cancel."""
    def __init__(
        self,
        *,
        task_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["task_id", b"task_id"]
    ) -> None: ...

global___CancelTaskRequest = CancelTaskRequest

@typing_extensions.final
class CancelTaskResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DID_CANCEL_FIELD_NUMBER: builtins.int
    did_cancel: builtins.bool
    """Whether the task was cancelled or not (only when it was running)."""
    def __init__(
        self,
        *,
        did_cancel: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["did_cancel", b"did_cancel"]
    ) -> None: ...

global___CancelTaskResponse = CancelTaskResponse

@typing_extensions.final
class AgentStatusRequest(google.protobuf.message.Message):
    """For future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___AgentStatusRequest = AgentStatusRequest

@typing_extensions.final
class AgentStatusResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUM_QUEUED_FIELD_NUMBER: builtins.int
    IDLE_FOR_FIELD_NUMBER: builtins.int
    num_queued: builtins.int
    """The number of tasks in the queue."""
    idle_for: builtins.float
    """If there is currently a running task, then 0. Otherwise, the number of
    seconds passed since the last task was completed.
    """
    def __init__(
        self,
        *,
        num_queued: builtins.int = ...,
        idle_for: builtins.float = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "idle_for", b"idle_for", "num_queued", b"num_queued"
        ],
    ) -> None: ...

global___AgentStatusResponse = AgentStatusResponse
